<?php


namespace Pinepain\SimpleConfig\Tests\Loaders;

use org\bovigo\vfs\vfsStream;
use Pinepain\SimpleConfig\Loaders\FileCacheLoader;
use Pinepain\SimpleConfig\Loaders\LoaderInterface;

class FileCacheLoaderTest extends \PHPUnit_Framework_TestCase
{
    private $root;

    protected function setUp()
    {
        parent::setUp();

        $structure = [
            'cache.php'          => "<?php return ['test items here'];",
            'cache_expected.php' => "<?php

// THIS IS AUTOGENERATED FILE! DO NOT EDIT IT!

return array (
  0 => 'test items here',
);
",
        ];

        $this->root = vfsStream::setup('root', null, $structure);
    }

    public function testGenerateCache()
    {
        /** @var FileCacheLoader | \PHPUnit_Framework_MockObject_MockObject $loader */
        $loader = $this->getMockBuilder('\Pinepain\SimpleConfig\Loaders\FileCacheLoader')
            ->setMethods(['getConfigFiles'])
            ->disableOriginalConstructor()
            ->getMock();

        $items = ['test items here'];

        $loader->generateCache(vfsStream::url('root/cache_test.php'), $items);

        $this->assertFileEquals(vfsStream::url('root/cache_expected.php'), vfsStream::url('root/cache_test.php'));
    }

    public function testLoadCached()
    {
        /** @var LoaderInterface | \PHPUnit_Framework_MockObject_MockObject $loader_interface */
        $loader_interface = $this->getMock('\Pinepain\SimpleConfig\Loaders\LoaderInterface');

        /** @var FileCacheLoader | \PHPUnit_Framework_MockObject_MockObject $loader */
        $loader = $this->getMockBuilder('\Pinepain\SimpleConfig\Loaders\FileCacheLoader')
            ->setMethods(['generateCache'])
            ->setConstructorArgs([$loader_interface, vfsStream::url('root/cache.php')])
            ->getMock();

        $expected = ['test items here'];

        $this->assertSame($expected, $loader->load());
    }

    public function testLoadWithGeneration()
    {
        $items = ['test items here'];

        /** @var LoaderInterface | \PHPUnit_Framework_MockObject_MockObject $loader_interface */
        $loader_interface = $this->getMockBuilder('\Pinepain\SimpleConfig\Loaders\LoaderInterface')
            ->setMethods(['load'])
            ->disableOriginalConstructor()
            ->getMock();

        $loader_interface->expects($this->once())
            ->method('load')
            ->willReturn($items);

        /** @var FileCacheLoader | \PHPUnit_Framework_MockObject_MockObject $loader */
        $loader = $this->getMockBuilder('\Pinepain\SimpleConfig\Loaders\FileCacheLoader')
            ->setMethods(['generateCache'])
            ->setConstructorArgs([$loader_interface, vfsStream::url('root/cache_nonexistent.php')])
            ->getMock();

        $loader->expects($this->once())
            ->method('generateCache')
            ->with(vfsStream::url('root/cache_nonexistent.php'), $items);

        $this->assertSame($items, $loader->load());
    }}
